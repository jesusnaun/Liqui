// <auto-generated />
using System;
using Liqui.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Liqui.Web.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Liqui.Web.Data.Entities.Grupo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("Liqui.Web.Data.Entities.HojaLiquidacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AmericanExpress");

                    b.Property<decimal>("DinersClub");

                    b.Property<decimal>("Efectivo");

                    b.Property<int?>("HojaProductoId");

                    b.Property<decimal>("InsumoPorProcesar");

                    b.Property<decimal>("InsumoSinProcesar");

                    b.Property<decimal>("MasterCredito");

                    b.Property<decimal>("MasterDebito");

                    b.Property<DateTime>("MyDate");

                    b.Property<decimal>("NoInsumo");

                    b.Property<decimal>("OtrosE");

                    b.Property<decimal>("OtrosI");

                    b.Property<decimal>("PersonalE");

                    b.Property<decimal>("PersonalI");

                    b.Property<decimal>("TotalEgresos");

                    b.Property<decimal>("TotalIngresos");

                    b.Property<int?>("UsuarioLocalId");

                    b.Property<decimal>("UtilidadBruta");

                    b.Property<decimal>("UtilidadEfetivo");

                    b.Property<decimal>("VisaCredito");

                    b.Property<decimal>("VisaDebito");

                    b.HasKey("Id");

                    b.HasIndex("HojaProductoId");

                    b.HasIndex("UsuarioLocalId");

                    b.ToTable("HojaLiquidaciones");
                });

            modelBuilder.Entity("Liqui.Web.Data.Entities.HojaProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Entrada");

                    b.Property<decimal>("Final");

                    b.Property<decimal>("Inicial");

                    b.Property<string>("Observaciones");

                    b.Property<int?>("ProductoId");

                    b.Property<decimal>("Venta");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.ToTable("HojaProductos");
                });

            modelBuilder.Entity("Liqui.Web.Data.Entities.Local", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.Property<string>("District")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Locales");
                });

            modelBuilder.Entity("Liqui.Web.Data.Entities.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GrupoId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasIndex("GrupoId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Liqui.Web.Data.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Liqui.Web.Data.Entities.UsuarioLocal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LocalId");

                    b.Property<int?>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("LocalId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioLocales");
                });

            modelBuilder.Entity("Liqui.Web.Data.Entities.HojaLiquidacion", b =>
                {
                    b.HasOne("Liqui.Web.Data.Entities.HojaProducto", "HojaProducto")
                        .WithMany("HojaLiquidaciones")
                        .HasForeignKey("HojaProductoId");

                    b.HasOne("Liqui.Web.Data.Entities.UsuarioLocal", "UsuarioLocal")
                        .WithMany("HojaLiquidaciones")
                        .HasForeignKey("UsuarioLocalId");
                });

            modelBuilder.Entity("Liqui.Web.Data.Entities.HojaProducto", b =>
                {
                    b.HasOne("Liqui.Web.Data.Entities.Producto", "Producto")
                        .WithMany("HojaProductos")
                        .HasForeignKey("ProductoId");
                });

            modelBuilder.Entity("Liqui.Web.Data.Entities.Producto", b =>
                {
                    b.HasOne("Liqui.Web.Data.Entities.Grupo", "Grupo")
                        .WithMany("Productos")
                        .HasForeignKey("GrupoId");
                });

            modelBuilder.Entity("Liqui.Web.Data.Entities.UsuarioLocal", b =>
                {
                    b.HasOne("Liqui.Web.Data.Entities.Local", "Local")
                        .WithMany("UsuarioLocales")
                        .HasForeignKey("LocalId");

                    b.HasOne("Liqui.Web.Data.Entities.Usuario", "Usuario")
                        .WithMany("UsuarioLocales")
                        .HasForeignKey("UsuarioId");
                });
#pragma warning restore 612, 618
        }
    }
}
